import os
import sys
import time
import tqdm
import glob
import yaml
import keras
import astropy
import numpy as np
import pandas as pd
import tensorflow as tf
import keras.backend as K
import astropy.units as u
import astropy.constants as c
from keras.layers import Layer
import matplotlib.pyplot as plt
from scipy.signal import savgol_filter
from keras.models import Sequential,Model
from keras.callbacks import EarlyStopping
from keras.initializers import glorot_normal
from dust_extinction.averages import GCC09_MWAvg
from scipy.ndimage.filters import gaussian_filter1d
from sklearn.model_selection import train_test_split
from scipy.interpolate import interp1d,UnivariateSpline
from dust_extinction.parameter_averages import CCM89,F99
from keras.callbacks import TerminateOnNaN,EarlyStopping,ModelCheckpoint
from keras.layers import Dense,Dropout,LocallyConnected1D,AveragePooling1D,Flatten,Layer,Reshape
from keras.layers import Input,Conv1D,MaxPooling1D,BatchNormalization,Activation,Add,UpSampling1D,Concatenate

def gaussian_loss(y_true, y_pred):
    return tf.reduce_mean(0.5*tf.math.log(sigma) + 0.5*tf.divide(tf.square(y_true - y_pred), sigma)) + 1e-6
def custom_loss(sigma):
    def gaussian_loss(y_true, y_pred):
        return tf.reduce_mean(0.5*tf.math.log(sigma) + 0.5*tf.divide(tf.square(y_true - y_pred), sigma)) + 1e-6
    return gaussian_loss
class GaussianLayer(Layer):    
    def __init__(self, output_dim=30,hardMax=False, **kwargs):
        self.output_dim = output_dim
        self.hardMax=hardMax
        super(GaussianLayer, self).__init__(**kwargs)
    def build(self, input_shape):
        self.kernel_1 = self.add_weight(name='kernel_1', 
                                      shape=(256, self.output_dim),
                                      initializer=glorot_normal(),
                                      trainable=True)
        self.kernel_2 = self.add_weight(name='kernel_2', 
                                      shape=(256, self.output_dim),
                                      initializer=glorot_normal(),
                                      trainable=True)
        self.bias_1 = self.add_weight(name='bias_1',
                                    shape=(self.output_dim, ),
                                    initializer=glorot_normal(),
                                    trainable=True)
        self.bias_2 = self.add_weight(name='bias_2',
                                    shape=(self.output_dim, ),
                                    initializer=glorot_normal(),
                                    trainable=True)
        super(GaussianLayer, self).build(input_shape)
    def call(self, x):
        output_mu  = K.dot(x, self.kernel_1) + self.bias_1
        if self.hardMax==True:
            output_mu=K.relu(output_mu)
            output_mu=output_mu/K.sum(output_mu,axis=-1,keepdims=True)#
            #output_mu=K.softmax(output_mu)
        output_sig = K.dot(x, self.kernel_2) + self.bias_2
        output_sig_pos = K.log(1 + K.exp(output_sig)) + 1e-06
        return [output_mu, output_sig_pos]
    def compute_output_shape(self, input_shape):
        return [(input_shape[0], self.output_dim), (input_shape[0], self.output_dim)]

wave=np.array([10000.0,9980.039920159681,9960.1593625498,9940.357852882704,9920.63492063492,9900.990099009901,9881.422924901184,9861.932938856016,9842.519685039371,9823.18271119843,9803.921568627451,9784.735812133073,9765.625,9746.588693957116,9727.626459143969,9708.737864077671,9689.922480620155,9671.179883945842,9652.509652509652,9633.911368015413,9615.384615384615,9596.928982725527,9578.544061302682,9560.229445506693,9541.984732824427,9523.809523809523,9505.703422053231,9487.666034155598,9469.69696969697,9451.79584120983,9433.962264150943,9416.195856873823,9398.496240601504,9380.863039399625,9363.295880149813,9345.794392523365,9328.358208955224,9310.986964618249,9293.680297397768,9276.437847866418,9259.25925925926,9242.144177449169,9225.09225092251,9208.103130755064,9191.176470588234,9174.311926605506,9157.509157509157,9140.767824497258,9124.087591240876,9107.468123861567,9090.90909090909,9074.410163339384,9057.971014492754,9041.591320072333,9025.270758122744,9009.009009009009,8992.805755395684,8976.660682226213,8960.57347670251,8944.543828264757,8928.57142857143,8912.6559714795,8896.79715302491,8880.994671403198,8865.248226950354,8849.557522123894,8833.922261484098,8818.342151675484,8802.81690140845,8787.346221441125,8771.929824561403,8756.567425569177,8741.25874125874,8726.003490401396,8710.801393728223,8695.652173913044,8680.555555555555,8665.511265164645,8650.519031141868,8635.578583765111,8620.689655172415,8605.851979345955,8591.06529209622,8576.329331046312,8561.643835616438,8547.008547008547,8532.423208191127,8517.887563884156,8503.401360544218,8488.964346349745,8474.57627118644,8460.236886632825,8445.945945945945,8431.703204047217,8417.508417508418,8403.361344537814,8389.261744966443,8375.209380234506,8361.204013377926,8347.245409015026,8333.333333333332,8319.46755407654,8305.647840531561,8291.873963515754,8278.14569536424,8264.462809917355,8250.82508250825,8237.232289950576,8223.684210526315,8210.180623973727,8196.72131147541,8183.306055646482,8169.934640522876,8156.606851549755,8143.322475570033,8130.081300813007,8116.883116883117,8103.727714748784,8090.614886731391,8077.544426494345,8064.516129032258,8051.529790660225,8038.585209003216,8025.6821829855535,8012.820512820513,8000.0,7987.220447284345,7974.481658692185,7961.783439490446,7949.125596184419,7936.507936507936,7923.930269413629,7911.392405063291,7898.894154818325,7886.435331230283,7874.015748031496,7861.635220125786,7849.293563579277,7836.990595611284,7824.726134585289,7812.5,7800.312012480499,7788.16199376947,7776.049766718506,7763.975155279502,7751.937984496124,7739.938080495356,7727.9752704791335,7716.04938271605,7704.160246533127,7692.307692307692,7680.491551459293,7668.711656441717,7656.967840735068,7645.25993883792,7633.587786259542,7621.951219512195,7610.3500761035,7598.784194528875,7587.253414264036,7575.757575757576,7564.296520423601,7552.870090634441,7541.478129713423,7530.12048192771,7518.796992481202,7507.507507507507,7496.251874062968,7485.02994011976,7473.841554559042,7462.686567164179,7451.564828614009,7440.47619047619,7429.420505200595,7418.39762611276,7407.407407407407,7396.449704142012,7385.5243722304285,7374.6312684365785,7363.7702503681885,7352.941176470588,7342.143906020558,7331.378299120234,7320.644216691068,7309.941520467836,7299.270072992701,7288.629737609329,7278.020378457059,7267.4418604651155,7256.894049346879,7246.376811594203,7235.890014471779,7225.433526011562,7215.007215007216,7204.610951008646,7194.244604316548,7183.908045977012,7173.601147776184,7163.323782234958,7153.07582260372,7142.857142857144,7132.667617689017,7122.507122507122,7112.375533428166,7102.272727272728,7092.198581560285,7082.152974504251,7072.135785007073,7062.146892655368,7052.1861777150925,7042.253521126761,7032.348804500704,7022.47191011236,7012.622720897616,7002.80112044818,6993.006993006993,6983.2402234636875,6973.50069735007,6963.788300835656,6954.102920723227,6944.444444444445,6934.812760055479,6925.207756232688,6915.629322268327,6906.077348066298,6896.551724137932,6887.052341597797,6877.57909215956,6868.131868131869,6858.710562414267,6849.315068493151,6839.945280437757,6830.601092896176,6821.2824010914055,6811.989100817439,6802.721088435374,6793.478260869565,6784.2605156038,6775.067750677507,6765.899864682003,6756.756756756758,6747.638326585696,6738.544474393531,6729.475100942127,6720.430107526882,6711.409395973155,6702.4128686327085,6693.440428380188,6684.491978609626,6675.567423230975,6666.666666666667,6657.789613848204,6648.936170212766,6640.106241699868,6631.299734748011,6622.516556291392,6613.756613756615,6605.019815059446,6596.306068601584,6587.615283267457,6578.947368421053,6570.30223390276,6561.679790026246,6553.07994757536,6544.502617801048,6535.9477124183,6527.415143603133,6518.90482398957,6510.416666666667,6501.950585175553,6493.506493506494,6485.08430609598,6476.683937823835,6468.3053040103505,6459.948320413437,6451.612903225807,6443.298969072166,6435.006435006435,6426.7352185089985,6418.485237483954,6410.256410256411,6402.048655569783,6393.861892583121,6385.696040868455,6377.551020408164,6369.4267515923575,6361.323155216285,6353.240152477764,6345.17766497462,6337.135614702155,6329.113924050634,6321.112515802783,6313.131313131314,6305.170239596469,6297.229219143578,6289.30817610063,6281.407035175879,6273.525721455458,6265.664160401003,6257.822277847309,6250.0,6242.197253433209,6234.413965087282,6226.650062266501,6218.905472636816,6211.180124223602,6203.47394540943,6195.786864931846,6188.118811881188,6180.469715698394,6172.83950617284,6165.228113440197,6157.635467980296,6150.0615006150065,6142.506142506142,6134.969325153375,6127.450980392157,6119.9510403916765,6112.469437652812,6105.006105006106,6097.5609756097565,6090.133982947625,6082.725060827251,6075.334143377887,6067.961165048544,6060.606060606061,6053.268765133173,6045.949214026603,6038.647342995169,6031.363088057901,6024.096385542169,6016.84717208183,6009.615384615385,6002.400960384154,5995.203836930456,5988.023952095809,5980.861244019139,5973.715651135007,5966.587112171837,5959.4755661501795,5952.380952380953,5945.303210463734,5938.242280285036,5931.198102016608,5924.1706161137445,5917.15976331361,5910.1654846335705,5903.18772136954,5896.22641509434,5889.281507656066,5882.352941176471,5875.440658049353,5868.544600938968,5861.664712778429,5854.800936768151,5847.95321637427,5841.121495327103,5834.3057176196035,5827.505827505828,5820.721769499418,5813.953488372093,5807.200929152149,5800.464037122971,5793.742757821553,5787.0370370370365,5780.346820809249,5773.672055427252,5767.012687427913,5760.3686635944705,5753.739930955121,5747.126436781609,5740.528128587831,5733.944954128441,5727.37686139748,5720.823798627002,5714.285714285715,5707.762557077625,5701.254275940708,5694.760820045558,5688.282138794085,5681.818181818182,5675.368898978434,5668.934240362812,5662.514156285391,5656.108597285068,5649.717514124294,5643.340857787811,5636.978579481398,5630.630630630631,5624.29696287964,5617.9775280898875,5611.672278338946,5605.3811659192825,5599.1041433370665,5592.841163310963,5586.59217877095,5580.357142857143,5574.136008918618,5567.92873051225,5561.735261401557,5555.555555555557,5549.389567147614,5543.2372505543235,5537.098560354375,5530.973451327433,5524.861878453039,5518.763796909493,5512.679162072768,5506.607929515419,5500.5500550055,5494.505494505495,5488.474204171241,5482.456140350878,5476.45125958379,5470.459518599563,5464.48087431694,5458.515283842796,5452.562704471101,5446.6230936819165,5440.696409140371,5434.782608695653,5428.881650380022,5422.993492407809,5417.118093174432,5411.255411255412,5405.405405405406,5399.5680345572355,5393.743257820927,5387.931034482759,5382.1313240043055,5376.344086021506,5370.569280343717,5364.806866952789,5359.056806002144,5353.3190578158465,5347.593582887701,5341.880341880343,5336.1792956243335,5330.490405117271,5324.813631522897,5319.148936170213,5313.496280552604,5307.855626326965,5302.226935312832,5296.610169491525,5291.005291005291,5285.412262156448,5279.831045406548,5274.261603375528,5268.703898840886,5263.1578947368425,5257.6235541535225,5252.100840336135,5246.589716684156,5241.090146750524,5235.602094240838,5230.125523012553,5224.660397074191,5219.206680584552,5213.76433785193,5208.333333333334,5202.913631633715,5197.505197505197,5192.107995846314,5186.721991701245,5181.347150259067,5175.983436853002,5170.63081695967,5165.289256198347,5159.958720330238,5154.639175257732,5149.330587023687,5144.0329218107,5138.74614594039,5133.47022587269,5128.205128205129,5122.950819672132,5117.70726714432,5112.474437627811,5107.252298263535,5102.04081632653,5096.839959225281,5091.6496945010185,5086.46998982706,5081.30081300813,5076.1421319796955,5070.993914807303,5065.856129685917,5060.728744939272,5055.611729019211,5050.50505050505,5045.408678102926,5040.322580645162,5035.246727089628,5030.181086519115,5025.125628140703,5020.0803212851415,5015.045135406219,5010.0200400801605,5005.005005005005,5000.0,4995.004995004995,4990.0199600798405,4985.044865403789,4980.0796812749,4975.124378109453,4970.178926441352,4965.243296921549,4960.31746031746,4955.401387512389,4950.495049504951,4945.598417408506,4940.711462450592,4935.834155972359,4930.966469428008,4926.108374384236,4921.259842519686,4916.420845624385,4911.591355599215,4906.771344455348,4901.9607843137255,4897.159647404505,4892.367906066536,4887.5855327468225,4882.8125,4878.048780487805,4873.294346978558,4868.54917234664,4863.813229571984,4859.086491739553,4854.368932038836,4849.660523763337,4844.961240310077,4840.27105517909,4835.589941972921,4830.917874396136,4826.254826254826,4821.600771456123,4816.955684007707,4812.319538017324,4807.692307692308,4803.073967339097,4798.4644913627635,4793.8638542665385,4789.272030651341,4784.6889952153115,4780.1147227533465,4775.549188156638,4770.992366412213,4766.444232602478,4761.9047619047615,4757.373929590866,4752.851711026616,4748.338081671415,4743.833017077799,4739.336492890995,4734.848484848485,4730.368968779565,4725.897920604915,4721.435316336167,4716.981132075472,4712.53534401508,4708.097928436911,4703.668861712135,4699.248120300752,4694.835680751174,4690.431519699812,4686.035613870666,4681.647940074907,4677.268475210477,4672.897196261682,4668.534080298787,4664.179104477612,4659.832246039143,4655.493482309124,4651.162790697675,4646.840148698884,4642.525533890436,4638.218923933209,4633.920296570899,4629.62962962963,4625.346901017577,4621.072088724584,4616.805170821791,4612.546125461255,4608.294930875576,4604.051565377532,4599.8160073597055,4595.588235294117,4591.368227731864,4587.155963302753,4582.9514207149405,4578.754578754579,4574.565416285453,4570.383912248629,4566.2100456621,4562.043795620438,4557.88514129444,4553.734061930783,4549.590536851683,4545.454545454545,4541.326067211626,4537.205081669692,4533.091568449682,4528.985507246377,4524.886877828054,4520.795660036167,4516.711833785005,4512.635379061372,4508.566275924256,4504.504504504504,4500.450045004501,4496.402877697842,4492.362982929021,4488.330341113106,4484.304932735426,4480.286738351255,4476.275738585497,4472.271914132379,4468.275245755139,4464.285714285715,4460.303300624442,4456.32798573975,4452.359750667853,4448.398576512455,4444.444444444444,4440.497335701599,4436.557231588287,4432.624113475177,4428.697962798937,4424.778761061947,4420.866489832007,4416.961130742049,4413.06266548985,4409.171075837742,4405.286343612335,4401.408450704225,4397.537379067722,4393.673110720562,4389.815627743635,4385.964912280701,4382.120946538124,4378.283712784589,4374.4531933508315,4370.62937062937,4366.812227074236,4363.001745200698,4359.197907585004,4355.4006968641115,4351.610095735422,4347.826086956522,4344.0486533449175,4340.277777777777,4336.513443191674,4332.7556325823225,4329.004329004329,4325.259515570934,4321.5211754537595,4317.7892918825555,4314.063848144952,4310.344827586207,4306.6322136089575,4302.925989672977,4299.226139294927,4295.53264604811,4291.845493562232,4288.164665523156,4284.490145672665,4280.821917808219,4277.15996578272,4273.504273504273,4269.854824935952,4266.211604095563,4262.574595055413,4258.943781942078,4255.31914893617,4251.700680272109,4248.088360237893,4244.4821731748725,4240.882103477523,4237.28813559322,4233.700254022015,4230.118443316413,4226.542688081149,4222.9729729729725,4219.4092827004215,4215.851602023608,4212.299915754002,4208.754208754209,4205.214465937763,4201.680672268907,4198.152812762384,4194.6308724832215,4191.1148365465215,4187.604690117253,4184.100418410041,4180.602006688963,4177.109440267335,4173.622704507513,4170.141784820684,4166.666666666666,4163.197335553705,4159.73377703827,4156.275976724854,4152.8239202657805,4149.377593360996,4145.936981757877,4142.502071251036,4139.07284768212,4135.6492969396195,4132.231404958678,4128.819157720892,4125.412541254125,4122.011541632316,4118.616144975288,4115.226337448559,4111.8421052631575,4108.463434675431,4105.0903119868635,4101.722723543889,4098.360655737705,4095.004095004095,4091.653027823241,4088.307440719542,4084.967320261438,4081.6326530612246,4078.3034257748777,4074.9796251018743,4071.6612377850165,4068.3482506102523,4065.0406504065036,4061.7384240454917,4058.4415584415583,4055.1500405515008,4051.863857374392,4048.582995951417,4045.3074433656957,4042.037186742118,4038.7722132471727,4035.5125100887813,4032.258064516129,4029.0088638195,4025.7648953301127,4022.5261464199516,4019.292604501608,4016.0642570281125,4012.8410914927767,4009.6230954290295,4006.4102564102564,4003.2025620496397,4000.0,3996.802557953637,3993.6102236421725,3990.4229848363925,3987.2408293460926,3984.06374501992,3980.891719745223,3977.7247414478916,3974.5627980922095,3971.405877680699,3968.253968253968,3965.107057890563,3961.9651347068143,3958.8281868566905,3955.6962025316457,3952.569169960474,3949.4470774091624,3946.3299131807416,3943.217665615143,3940.110323089047,3937.0078740157483,3933.9103068450045,3930.8176100628934,3927.7297721916734,3924.6467817896396,3921.5686274509812,3918.4952978056435,3915.426781519186,3912.363067292645,3909.304143862393,3906.2500000000005,3903.2006245121006,3900.15600624025,3897.116134060796,3894.0809968847357,3891.050583657588,3888.024883359254,3885.0038850038854,3881.987577639752,3878.9759503491086,3875.9689922480625,3872.966692486445,3869.9690402476785,3866.9760247486474,3863.9876352395677,3861.0038610038614,3858.0246913580254,3855.050115651504,3852.080123266565,3849.1147036181683,3846.1538461538466,3843.197540353575,3840.2457757296474,3837.2985418265544,3834.355828220859,3831.4176245210733,3828.4839203675347,3825.5547054322883,3822.6299694189606,3819.7097020626434,3816.7938931297713,3813.882532418002,3810.975609756098,3808.0731150038087,3805.1750380517506,3802.281368821293,3799.392097264438,3796.507213363706,3793.6267071320185,3790.7505686125855,3787.8787878787884,3785.011355034065,3782.148260211801,3779.2894935752083,3776.435045317221,3773.584905660378,3770.7390648567125,3767.897513187642,3765.060240963856,3762.227238525207,3759.398496240602,3756.574004507889,3753.753753753754,3750.937734433609,3748.1259370314847,3745.3183520599255,3742.514970059881,3739.715781600599,3736.920777279522,3734.1299477221814,3731.34328358209,3728.5607755406418,3725.782414307005,3723.00819061802,3720.238095238096,3717.4721189591082,3714.7102526002977,3711.952487008167,3709.1988130563805,3706.449221645664,3703.703703703704,3700.9622501850486,3698.2248520710064,3695.4915003695496,3692.7621861152147,3690.0369003690043,3687.3156342182897,3684.5983787767136,3681.8851251840947,3679.1758646063286,3676.4705882352946,3673.7692872887587,3671.0719530102792,3668.3785766691126,3665.6891495601176,3663.0036630036634,3660.3221083455346,3657.64447695684,3654.9707602339186,3652.3009495982474,3649.635036496351,3646.9730123997088,3644.3148688046654,3641.660597232338,3639.01018922853,3636.363636363637,3633.720930232558,3631.082062454612,3628.44702467344,3625.8158085569257,3623.188405797102,3620.5648081100653,3617.9450072358904,3615.32899493854,3612.716763005781,3610.108303249098,3607.503607503608,3604.9026676279746,3602.305475504323,3599.7120230381574,3597.122302158274,3594.536304816679,3591.954022988506,3589.3754486719317,3586.800573888092,3584.229390681004,3581.661891117479,3579.0980672870437,3576.53791130186,3573.981415296641,3571.428571428572,3568.879371877231,3566.3338088445084,3563.7918745545267,3561.253561253561,3558.7188612099644,3556.187766714083,3553.660270078181,3551.136363636364,3548.6160397445,3546.0992907801424,3543.5861091424526,3541.0764872521254,3538.5704175513097,3536.0678925035363,3533.5689045936397,3531.073446327684,3528.581510232887,3526.0930888575463,3523.608174770966,3521.1267605633807,3518.648838845884,3516.174402250352,3513.703443429375,3511.23595505618,3508.771929824562,3506.311360448808,3503.8542396636303,3501.40056022409,3498.9503149055286,3496.5034965034965,3494.0600978336834,3491.6201117318437,3489.1835310537335,3486.750348675035,3484.3205574912895,3481.894150417828,3479.4711203897014,3477.0514603616134,3474.635163307853,3472.2222222222226,3469.8126301179736,3467.4063800277395,3465.0034650034654,3462.603878116344,3460.207612456748,3457.8146611341635,3455.4250172771253,3453.038674033149,3450.6556245686684,3448.275862068966,3445.8993797381117,3443.5261707988984,3441.156228492774,3438.78954607978,3436.4261168384883,3434.0659340659345,3431.708991077557,3429.3552812071334,3427.0047978067173,3424.6575342465753,3422.3134839151267,3419.9726402188785,3417.6349965823656,3415.300546448088,3412.969283276451,3410.6412005457028,3408.316291751875,3405.9945504087195,3403.675970047652,3401.360544217687,3399.0482664853844,3396.7391304347825,3394.433129667346,3392.1302578019,3389.8305084745766,3387.5338753387537,3385.240352064997,3382.9499323410014,3380.662609871535,3378.378378378379,3376.0972316002703,3373.819163292848,3371.544167228591,3369.2722371967657,3367.003367003367,3364.7375504710635,3362.47478143914,3360.215053763441,3357.95836131632,3355.7046979865777,3353.45405767941,3351.2064343163543,3348.9618218352316,3346.720214190094,3344.481605351171,3342.245989304813,3340.0133600534405,3337.7837116154874,3335.5570380253507,3333.3333333333335,3331.1125916055967,3328.894806924102,3326.6799733865605,3324.468085106383,3322.259136212625,3320.053120849934,3317.850033178501,3315.6498673740057,3313.4526176275685,3311.258278145696,3309.0668431502318,3306.8783068783073,3304.692663582287,3302.509907529723,3300.3300330033007,3298.153034300792,3295.9789057350035,3293.8076416337285,3291.6392363396976,3289.4736842105267,3287.3109796186723,3285.15111695138,3282.994090610637,3280.839895013123,3278.688524590164,3276.53997378768,3274.394237066143,3272.251308900524,3270.1111837802487,3267.97385620915,3265.8393207054214,3263.7075718015667,3261.578604044358,3259.452411994785,3257.3289902280135,3255.2083333333335,3253.0904359141186,3250.9752925877765,3248.862897985705,3246.753246753247,3244.6463335496433,3242.54215304799,3240.440699935192,3238.3419689119173,3236.245954692557,3234.1526520051752,3232.0620555914675,3229.9741602067184,3227.888960619755,3225.8064516129034,3223.7266279819473,3221.649484536083,3219.575016097875,3217.5032175032175,3215.434083601286,3213.3676092544993,3211.3037893384717,3209.242618741977,3207.184092366902,3205.1282051282055,3203.074951953876,3201.0243277848913,3198.9763275751766,3196.9309462915603,3194.8881789137386,3192.8480204342277,3190.810465858328,3188.775510204082,3186.7431485022307,3184.7133757961788,3182.686187141948,3180.6615776081426,3178.639542275906,3176.620076238882,3174.603174603175,3172.58883248731,3170.5770450221944,3168.5678073510776,3166.5611146295128,3164.556962025317,3162.555344718533,3160.5562579013913,3158.5596967782694,3156.565656565657,3154.5741324921137,3152.5851197982347,3150.59861373661,3148.614609571789,3146.633102580239,3144.654088050315,3142.677561282213,3140.7035175879396,3138.731952291275,3136.762860727729,3134.7962382445144,3132.8320802005014,3130.870381966187,3128.9111389236546,3126.9543464665417,3125.0,3123.0480949406624,3121.0986267166045,3119.1515907673115,3117.206982543641,3115.2647975077884,3113.3250311332504,3111.3876789047918,3109.452736318408,3107.5201988812933,3105.590062111801,3103.6623215394166,3101.736972704715,3099.8140111593307,3097.893432465923,3095.9752321981423,3094.059405940594,3092.1459492888066,3090.234857849197,3088.326127239037,3086.41975308642,3084.5157310302284,3082.6140567200987,3080.7147258163895,3078.817733990148,3076.9230769230776,3075.0307503075032,3073.140749846343,3071.253071253071,3069.3677102516885,3067.4846625766877,3065.603923973023,3063.7254901960787,3061.849357011635,3059.9755201958383,3058.1039755351685,3056.234718826406,3054.3677458766033,3052.503052503053,3050.640634533252,3048.7804878048782,3046.922608165753,3045.0669914738123,3043.2136335970786,3041.3625304136253,3039.51367781155,3037.6670716889435,3035.822707953856,3033.980582524272,3032.140691328078,3030.3030303030305,3028.4675953967294,3026.6343825665863,3024.8033877797943,3022.9746070133015,3021.1480362537764,3019.3236714975847,3017.501508750755,3015.6815440289506,3013.863773357444,3012.0481927710844,3010.234798314269,3008.423586040915,3006.614552014432,3004.8076923076924,3003.0030030030034,3001.200480192077,2999.4001199760046,2997.601918465228,2995.805871779509,2994.0119760479047,2992.2202274087376,2990.4306220095696,2988.643156007173,2986.8578255675034,2985.074626865672,2983.2935560859187,2981.514609421586,2979.7377830750897,2977.9630732578917,2976.1904761904766,2974.41998810232,2972.651605231867,2970.8853238265006,2969.121140142518,2967.3590504451035,2965.599051008304,2963.841138114997,2962.0853080568722,2960.331557134399,2958.579881656805,2956.8302779420465,2955.0827423167852,2953.337271116362,2951.59386068477,2949.8525073746314,2948.11320754717,2946.3759575721865,2944.640753828033,2942.9075927015897,2941.1764705882356,2939.447383891829,2937.7203290246766,2935.995302407516,2934.272300469484,2932.5513196480942,2930.8323563892145,2929.115407147042,2927.4004683840753,2925.6875365710944,2923.976608187135,2922.2676797194626,2920.5607476635514,2918.855808523059,2917.1528588098017,2915.451895043732,2913.752913752914,2912.0559114735,2910.360884749709,2908.667830133799,2906.9767441860463,2905.287623474724,2903.6004645760745,2901.9152640742896,2900.2320185614853,2898.550724637681,2896.8713789107765,2895.1939779965255,2893.5185185185182,2891.844997108155,2890.1734104046245,2888.503755054882,2886.836027713626,2885.1702250432772,2883.5063437139565,2881.8443804034587,2880.1843317972352,2878.5261945883713,2876.8699654775605,2875.215641173088,2873.5632183908046,2871.912693854107,2870.2640642939155,2868.617326448652,2866.9724770642206,2865.329512893983,2863.68843069874,2862.0492272467086,2860.411899313501,2858.776443682104,2857.1428571428573,2855.511136493433,2853.8812785388127,2852.2532800912722,2850.627137970354,2849.002849002849,2847.380410022779,2845.759817871372,2844.1410693970424,2842.5241614553725,2840.909090909091,2839.2958546280524,2837.684449489217,2836.0748723766305,2834.467120181406,2832.8611898016998,2831.2570781426957,2829.654782116582,2828.054298642534,2826.455624646693,2824.858757062147,2823.2636928289103,2821.6704288939054,2820.078962210942,2818.489289740699,2816.9014084507044,2815.3153153153153,2813.731007315701,2812.14848143982,2810.567734682406,2808.9887640449438,2807.411566535654,2805.836139169473,2804.2624789680312,2802.6905829596412,2801.120448179272,2799.5520716685332,2797.985450475658,2796.4205816554813,2794.8574622694246,2793.296089385475,2791.736460078169,2790.1785714285716,2788.622420524261,2787.068004459309,2785.515320334262,2783.964365256125,2782.415136338342,2780.8676307007786,2779.3218454697057,2777.7777777777783,2776.23542476402,2774.694783573807,2773.1558513588466,2771.6186252771618,2770.083102493075,2768.5492801771875,2767.0171555063644,2765.4867256637167,2763.957987838585,2762.4309392265195,2760.9055770292657,2759.3818984547465,2757.8599007170437,2756.339581036384,2754.8209366391184,2753.3039647577093,2751.78866263071,2750.27502750275,2748.763056624519,2747.2527472527477,2745.744096650192,2744.2371020856203,2742.7317608337908,2741.228070175439,2739.72602739726,2738.225629791895,2736.7268746579093,2735.2297592997816,2733.734281027884,2732.24043715847,2730.748225013654,2729.257641921398,2727.768685215494,2726.2813522355505,2724.7956403269754,2723.3115468409583,2721.829069134458,2720.3482045701853,2718.8689505165853,2717.3913043478265,2715.9152634437805,2714.440825190011,2712.967986977754,2711.4967462039044,2710.027100271003,2708.559046587216,2707.092582566324,2705.627705627706,2704.1644131963226,2702.702702702703,2701.242571582928,2699.7840172786177,2698.3270372369134,2696.8716289104636,2695.4177897574127,2693.9655172413795,2692.5148088314486,2691.0656620021527,2689.618074233459,2688.172043010753,2686.7275658248254,2685.2846401718584,2683.8432635534086,2682.4034334763946,2680.965147453083,2679.528403001072,2678.093197643278,2676.6595289079232,2675.227394328518,2673.7967914438505,2672.367717797969,2670.9401709401714,2669.5141484249866,2668.0896478121667,2666.666666666667,2665.2452025586354,2663.8252530633995,2662.4068157614483,2660.9898882384246,2659.5744680851067,2658.160552897395,2656.748140276302,2655.337227827934,2653.9278131634824,2652.5198938992044,2651.113467656416,2649.7085320614733,2648.3050847457625,2646.903123345686,2645.5026455026455,2644.1036488630352,2642.706131078224,2641.310089804543,2639.915522703274,2638.5224274406332,2637.130801687764,2635.7406431207173,2634.351949420443,2632.9647182727754,2631.5789473684213,2630.194634402946,2628.8117770767612,2627.430373095113,2626.0504201680674,2624.671916010499,2623.294858342078,2621.9192448872577,2620.545073375262,2619.1723415400734,2617.801047120419,2616.4311878597596,2615.0627615062763,2613.6957658128595,2612.3301985370954,2610.9660574412533,2609.603340292276,2608.242044861763,2606.882168925965,2605.523710265764,2604.166666666667,2602.811035918792,2601.4568158168577,2600.104004160167,2598.7525987525987,2597.4025974025976,2596.053997923157,2594.7067981318114,2593.3609958506227,2592.016588906169,2590.6735751295337,2589.3319523562923,2587.991718426501,2586.6528711846872,2585.315408479835,2583.9793281653747,2582.6446280991736,2581.311306143521,2579.979360165119,2578.6487880350696,2577.319587628866,2575.991756826378,2574.6652935118436,2573.340195573855,2572.01646090535,2570.6940874035986,2569.373072970195,2568.0534155110427,2566.735112936345,2565.418163160595,2564.1025641025644,2562.7883136852897,2561.475409836066,2560.163850486431,2558.85363357216,2557.544757033248,2556.2372188139057,2554.9310168625448,2553.6261491317673,2552.322613578356,2551.020408163265,2549.7195308516066,2548.4199796126404,2547.1217524197655,2545.8248472505093,2544.529262086514,2543.23499491353,2541.942043721403,2540.650406504065,2539.3600812595223,2538.0710659898477,2536.783358701167,2535.4969574036513,2534.2118601115053,2532.9280648429585,2531.6455696202534,2530.364372469636,2529.0844714213454,2527.8058645096057,2526.5285497726127,2525.252525252525,2523.977788995457,2522.704339051463,2521.4321734745336,2520.161290322581,2518.8916876574303,2517.623363544814,2516.356316054353,2515.0905432595573,2513.8260432378083,2512.5628140703516,2511.30085384229,2510.0401606425708,2508.7807325639737,2507.5225677031094,2506.265664160401,2505.0100200400802,2503.7556334501755,2502.5025025025025,2501.2506253126567,2500.0,2498.750624687656,2497.5024975024976,2496.255616575137,2495.0099800399203,2493.7655860349128,2492.5224327018946,2491.2805181863478,2490.03984063745,2488.8003982080636,2487.5621890547263,2486.325211337643,2485.089463220676,2483.8549428713363,2482.6216484607744,2481.3895781637716,2480.15873015873,2478.929102627665,2477.7006937561946,2476.473501733531,2475.2475247524753,2474.022761009401,2472.799208704253,2471.576866040534,2470.355731225296,2469.135802469136,2467.9170779861797,2466.6995559940797,2465.483234714004,2464.268112370626,2463.054187192118,2461.841457410143,2460.629921259843,2459.4195769798325,2458.2104228121925,2457.002457002457,2455.7956777996073,2454.590083456063,2453.385672227674,2452.1824423737125,2450.9803921568628,2449.779519843214,2448.5798237022527,2447.3813020068524,2446.183953033268,2444.987775061125,2443.7927663734113,2442.5989252564727,2441.40625,2440.214738897023,2439.0243902439024,2437.8352023403218,2436.647173489279,2435.4603019970773,2434.27458617332,2433.0900243309,2431.906614785992,2430.724355858046,2429.5432458697765,2428.3632831471587,2427.184466019418,2426.0067928190197,2424.8302618816683,2423.654871546292,2422.4806201550387,2421.3075060532688,2420.135527589545,2418.9646831156265,2417.7949709864606,2416.626389560174,2415.458937198068,2414.2926122646063,2413.127413127413,2411.96333815726,2410.8003857280614,2409.6385542168673,2408.4778420038533,2407.3182474723158,2406.159769008662,2405.002405002405,2403.846153846154,2402.6910139356078,2401.5369836695486,2400.384061449832,2399.2322456813818,2398.0815347721823,2396.9319271332693,2395.7834211787253,2394.6360153256705,2393.4897079942557,2392.3444976076557,2391.2003825920615,2390.0573613766733,2388.915432393693,2387.774594078319,2386.6348448687354,2385.4961832061067,2384.3586075345734,2383.222116301239,2382.0867079561694,2380.9523809523807,2379.8191337458356,2378.686964795433,2377.5558725630053,2376.425855513308,2375.2969121140145,2374.1690408357076,2373.042240151875,2371.9165085388995,2370.791844476055,2369.6682464454975,2368.54571293226,2367.4242424242425,2366.30383341221,2365.1844843897825,2364.066193853428,2362.9489603024576,2361.8327822390174,2360.7176581680833,2359.603586597452,2358.490566037736,2357.378595002357,2356.26767200754,2355.1577955723033,2354.0489642184557,2352.9411764705883,2351.8344308560677,2350.7287259050304,2349.624060150376,2348.5204321277592,2347.417840375587,2346.316283435007,2345.215759849906,2344.116268166901,2343.017806935333,2341.92037470726,2340.8239700374534,2339.728591483388,2338.6342376052385,2337.540906965872,2336.448598130841,2335.3573096683795,2334.2670401493933,2333.177788147457,2332.089552238806,2331.002331002331,2329.9161230195714,2328.830926874709,2327.746741154562,2326.663564448581,2325.5813953488373,2324.5002324500233,2323.420074349442,2322.3409196470043,2321.262766945218,2320.185614849188,2319.1094619666046,2318.034306907742,2316.9601482854496,2315.886984715146,2314.814814814815,2313.743637204998,2312.6734505087884,2311.604253351826,2310.536044362292,2309.4688221709007,2308.4025854108954,2307.3373327180434,2306.2730627306273,2305.209774089442,2304.147465437788,2303.086135421465,2302.025782688766,2300.966405890474,2299.9080036798528,2298.8505747126437,2297.7941176470586,2296.738631143776,2295.684113865932,2294.630564479119,2293.5779816513764,2292.5263640531866,2291.4757103574702,2290.4260192395786,2289.3772893772893,2288.329519450801,2287.2827081427263,2286.236854138089,2285.1919561243144,2284.148012791229,2283.10502283105,2282.062984938384,2281.021897810219,2279.9817601459185,2278.94257064722,2277.904328018223,2276.8670309653917,2275.830678197542,2274.7952684258416,2273.7608003638015,2272.7272727272725,2271.694684234439,2270.663033605813,2269.632319564231,2268.602540834846,2267.573696145125,2266.545784224841,2265.5188038060714,2264.4927536231885,2263.4676324128563,2262.443438914027,2261.420171867933,2260.3978300180834,2259.3764121102577,2258.3559168925026,2257.3363431151242,2256.317689530686,2255.299954894001,2254.283137962128,2253.267237494367,2252.252252252252,2251.23818099955,2250.2250225022503,2249.212775528565,2248.201438848921,2247.191011235955,2246.1814914645106,2245.17287831163,2244.165170556553,2243.1583669807087,2242.152466367713,2241.147467503362,2240.1433691756274,2239.1401701746527,2238.1378692927483,2237.136465324385,2236.1359570661893,2235.136343316942,2234.1376228775694,2233.139794551139,2232.1428571428573,2231.1468094600623,2230.151650312221,2229.157378510923,2228.163992869875,2227.1714922048996,2226.1798753339267,2225.1891410769917,2224.1992882562276,2223.2103156958647,2222.222222222222,2221.235006663705,2220.2486678507994,2219.2632046160675,2218.2786157941437,2217.294900221729,2216.3120567375886,2215.330084182543,2214.3489813994684,2213.368747233289,2212.3893805309735,2211.4108801415305,2210.4332449160033,2209.456473707468,2208.4805653710246,2207.5055187637968,2206.531332744925,2205.5580061755622,2204.585537918871,2203.6139268400175,2202.6431718061676,2201.6732716864817,2200.7042253521126,2199.7360316761988,2198.768689533861,2197.8021978021975,2196.836555360281,2195.871761089152,2194.9078138718173,2193.9447125932425,2192.9824561403507,2192.021043402017,2191.060473269062,2190.1007446342533,2189.1418563922944,2188.183807439825,2187.2265966754157,2186.270222999563,2185.314685314685,2184.3599825251204,2183.406113537118,2182.4530772588387,2181.500872600349,2180.549498473615,2179.598953792502,2178.649237472767,2177.7003484320558,2176.7522855898997,2175.805047867711,2174.8586341887776,2173.913043478261,2172.9682746631897,2172.0243266724588,2171.0811984368215,2170.1388888888887,2169.1973969631235,2168.256721595837,2167.316861725184,2166.3778162911613,2165.4395842356,2164.5021645021643,2163.565556036348,2162.629757785467,2161.6947686986596,2160.7605877268797,2159.827213822894,2158.8946459412778,2157.9628830384117,2157.031924072476,2156.1017680034497,2155.1724137931037,2154.243860404998,2153.3161068044787,2152.389151958674,2151.4629948364886,2150.537634408602,2149.6130696474634,2148.6892995272883,2147.766323024055,2146.8441391155,2145.922746781116,2145.002145002145,2144.082332761578,2143.163309044149,2142.2450728363324,2141.327623126338,2140.4109589041095,2139.495079161318,2138.57998289136,2137.6656690893547,2136.7521367521367,2135.839384878257,2134.927412467976,2134.0162185232607,2133.1058020477817,2132.1961620469083,2131.2872975277064,2130.3792074989346,2129.471890971039,2128.565346956151,2127.659574468085,2126.754572522331,2125.8503401360545,2124.9468763280915,2124.0441801189463,2123.1422505307855,2122.2410865874363,2121.3406873143826,2120.4410517387614,2119.54217888936,2118.64406779661,2117.746717492588,2116.8501270110073,2115.9542953872196,2115.0592216582063,2114.1649048625795,2113.2713440405746,2112.3785382340516,2111.4864864864862,2110.5951878429714,2109.7046413502107,2108.814846056516,2107.925801011804,2107.0375052675936,2106.149957877001,2105.2631578947367,2104.3771043771044,2103.491796381994,2102.6072329688814,2101.723413198823,2100.8403361344535,2099.958000839983,2099.076406381192,2098.19555182543,2097.3154362416108,2096.4360587002093,2095.5574182732607,2094.679514034353,2093.8023450586265,2092.925910422771,2092.0502092050206,2091.1752404851527,2090.3010033444816,2089.4274968658588,2088.5547201336676,2087.6826722338205,2086.8113522537565,2085.9407592824364,2085.070892410342,2084.2017507294704,2083.333333333333,2082.465639316951,2081.5986677768524,2080.7324178110694,2079.866888519135,2079.002079002079,2078.137988362427,2077.274615704196,2076.4119601328903,2075.5500207555,2074.688796680498,2073.828287017835,2072.9684908789386,2072.1094073767094,2071.251035625518,2070.3933747412007,2069.53642384106,2068.680182043856,2067.8246484698097,2066.9698222405955,2066.115702479339,2065.2622883106155,2064.409578860446,2063.557573256294,2062.7062706270626,2061.855670103093,2061.005770816158,2060.1565718994643,2059.308072487644,2058.460271716756,2057.6131687242796,2056.7667626491157,2055.9210526315787,2055.076037813399,2054.2317173377155,2053.388090349076,2052.5451559934318,2051.702913418137,2050.8613617719443,2050.020500205002,2049.1803278688526,2048.3408439164277,2047.5020475020474,2046.6639377814163,2045.8265139116204,2044.9897750511248,2044.153720359771,2043.318348998774,2042.483660130719,2041.649652919559,2040.8163265306123,2039.983680130559,2039.1517128874389,2038.320423970648,2037.4898125509371,2036.6598778004072,2035.8306188925083,2035.002035002035,2034.1741253051262,2033.3468889792598,2032.5203252032518,2031.6944331572531,2030.8692120227458,2030.0446609825415,2029.2207792207791,2028.3975659229209,2027.5750202757504,2026.7531414673692,2025.931928687196,2025.1113811259618,2024.2914979757086,2023.4722784297853,2022.6537216828478,2021.835826930853,2021.018593371059,2020.20202020202,2019.3861066235863,2018.5708518368992,2017.7562550443906,2016.942315449778,2016.1290322580644,2015.3164046755342,2014.50443190975,2013.693113169553,2012.8824476650564,2012.0724346076458,2011.2630732099758,2010.454362685967,2009.646302250804,2008.8388911209322,2008.0321285140562,2007.226013649137,2006.4205457463884,2005.6157240272762,2004.8115477145147,2004.0080160320642,2003.2051282051282,2002.402883460152,2001.6012810248199,2000.8003201280512])
#YauxNorm=np.load('YauxNorm.npy')
YauxNorm=np.array([[8.43506863e+00,2.48055807e+01,6.44557712e+03,9.96963239e-01,1.09766982e+00],
                   [1.67369881e-01,8.59342454e+00,2.57143045e+03,5.76492741e-01,5.19210821e-01]])

def Normalizer(spec,shortwave=6500,longwave=7500):
    small=np.argmin(abs(spec[:,0]-shortwave))
    long=np.argmin(abs(spec[:,0]-longwave))
    if small<long:spec[:,1]=spec[:,1]/np.average(spec[small:long,1])
    if small>long:spec[:,1]=spec[:,1]/np.average(spec[long:small,1])
    return spec
def windowSpec(spec):
    spFunc=interp1d(spec[:,0],spec[:,1],fill_value=np.nan,bounds_error=False)
    smFlux=spFunc(wave)
    smFlux=smFlux/np.nanmean(smFlux)
    smFlux[np.isnan(smFlux)]=-1
    return np.array([wave,smFlux]).T
def specListMaker(starTableDir,redshift,extMW=0,extHost=0,telNameGetter=False):
    starTable=pd.read_csv(starTableDir+'starTable.csv')#'../ObserveSpectra/GoodSpec/SN2011fe/starTable.csv'
    X_snemo=[]
    timeCollect=[]
    telNameList=[]
    for i in range(len(starTable)):
        if starTable['Phase'][i]>20 or starTable['Phase'][i]<-10:continue
        fileName=starTable['Ascii file'].iloc[i]
        fileName=glob.glob(starTableDir+fileName.split('.dat')[0]+'*')[0]
        spec=np.genfromtxt(fileName)
        spec[:,1]=spec[:,1]/GCC09_MWAvg().extinguish(spec[:,0]*u.Angstrom,Ebv=extMW)
        spec[:,0]=spec[:,0]/(1+redshift)
        spec[:,1]=spec[:,1]/F99().extinguish(spec[:,0]*u.Angstrom,Ebv=extHost)
        spec=Normalizer(spec)
        spResa=windowSpec(spec)
        if np.max(spResa[:,1])>20:continue
        X_snemo.append(spResa[:,1].reshape([2000,1]))
        timeCollect.append(starTable['Phase'][i])
        if telNameGetter:
            telNameList.append(starTable['Tel'][i])
    X_snemo=np.array(X_snemo)
    timeCollect=np.array(timeCollect)+19
    if telNameGetter:
        return X_snemo,timeCollect,telNameList
    else:
        return X_snemo,timeCollect

def MRNNSoftMaxESMake(CellNumber=7,outter=0):
    INput=Input(shape=(2000,1,))
    conv1=Conv1D(8,15,strides=2,padding='same')(INput)
    conv1=Conv1D(16,3,strides=1,padding='same')(conv1)
    batc1=BatchNormalization()(conv1)
    acti1=Activation('selu')(batc1)
    pool1=MaxPooling1D(2)(acti1)
    
    conv2=Conv1D(8,1)(pool1)
    batc2=BatchNormalization()(conv2)
    acti2=Activation('selu')(batc2)
    conv3=Conv1D(16,3,padding='same')(acti2)
    
    adds=[pool1]
    
    addi=Add()(adds+[conv3])
    adds.append(addi)
    
    for i in range(CellNumber):
        conv2=Conv1D(8,1)(addi)
        batc2=BatchNormalization()(conv2)
        acti2=Activation('selu')(batc2)
        conv3=Conv1D(16,3,padding='same')(acti2)
        addi=Add()(adds+[conv3])
        adds.append(addi)
    
    batc2=BatchNormalization()(addi)
    
    flat1=keras.layers.Flatten()(batc2)
    drop1=Dropout(0.2)(flat1)
    dens1=Dense(256,activation='selu')(drop1)
    
    INput2=Input(shape=(3,))
    dens2=Dense(6,activation='selu')(INput2)
    dens2=Dense(9,activation='selu')(dens2)
    conc1=Concatenate()([INput2,dens2])
    dens2=Dense(21,activation='selu')(conc1)
    conc1=Concatenate()([INput2,dens2])
    dens2=Dense(45,activation='selu')(conc1)
    conc1=Concatenate()([INput2,dens2])
    
    conc2=Concatenate()([conc1,dens1])
    dens3=Dense(384,activation='selu')(conc2)
    drop2=Dropout(0.2)(dens3)
    
    dens3=Dense(256,activation='selu')(drop2)
    dens3=Dense(256,activation='selu')(dens3)
    dens3=Dense(256,activation='selu')(dens3)
    dens3=Dense(256,activation='selu')(dens3)
    
    if outter==6:mu,sig=GaussianLayer(2,name='ld_out')(dens3)
    else:mu,sig=GaussianLayer(30,hardMax=False,name='zone_'+str(outter)+'_out')(dens3)
    model=Model(inputs=[INput,INput2],outputs=mu)
    print(model.summary())
    opt=keras.optimizers.Adam(learning_rate=0.00003,decay=1e-6)
    model.compile(optimizer=opt,loss=custom_loss(sig))
    return model

def BestSelecter(FitFluxIn,ObsSpecIn,matBigIn,auxBigIn,returnList=False):
    pivotList=[]
    pivotIndexList=[]
    slopeList=[]
    slopeIndexList=[]
    chisqList=[]
    for pivInd in range(FitFluxIn.shape[0]):
        for sloInd in range(FitFluxIn.shape[1]):
            fluxList=FitFluxIn[pivInd,sloInd]
            if np.isnan(np.sum(fluxList)):continue
            pivot=auxBigIn[pivInd,sloInd,0,3]
            slope=auxBigIn[pivInd,sloInd,0,4]
            pivotList.append(round(float(pivot),3))
            slopeList.append(round(float(slope),3))
            pivotIndexList.append(pivInd)
            slopeIndexList.append(sloInd)
            chisqOneSeq=0
            for j in range(len(ObsSpecIn)):
                fluxObs=ObsSpecIn[j][:,0]
                fluxFit=fluxList[j]
                mask=(fluxObs>0)
                fluxObs=fluxObs[mask]
                fluxFit=fluxFit[mask]
                fluxObs=fluxObs/np.mean(fluxObs)
                fluxFit=fluxFit/np.mean(fluxFit)
                chisqOneSeq=chisqOneSeq+np.sum((fluxObs-fluxFit)**2)
            chisqList.append(chisqOneSeq)
    chisqList=np.array(chisqList)
    minHere=np.nanargmin(chisqList)
    pivotCen=pivotList[minHere]
    slopeCen=slopeList[minHere]
    if returnList==False:
        return pivotCen,slopeCen
    else:
        return pivotCen,slopeCen,chisqList,pivotList,pivotIndexList,slopeList,slopeIndexList

def bestSeqPredictor(snName,specDir,predOutDir,specOutDir,sequenceDir,networkDir,ebvHost,ebvMw,redshift):
    intermediateModels=[]
    for outter in range(7):
        valiLossList=[]
        for mdInd in range(10):
            try:
                his2=pd.read_csv(networkDir+'/ES_'+str(outter)+'_'+str(mdInd)+'_His2.csv')
                valiLoss=his2['val_loss'].iloc[-1]
                if np.isnan(valiLoss):valiLoss=np.inf
            except:valiLoss=np.inf
            valiLossList.append(valiLoss)
        mdIndChos=np.argmin(valiLossList)
        model=MRNNSoftMaxESMake(outter=outter)
        model.load_weights(networkDir+'/Model_'+str(outter)+'_'+str(mdIndChos)+'.hdf')
        if outter==6:
            outLayerName='ld_out'
        else:outLayerName='zone_'+str(outter)+'_out'
        intermediateModels.append(K.function(inputs=[model.input[0],model.input[1]],outputs=model.get_layer(outLayerName).output))

    def ModelPredictor(modelList,specList,auxInList):
        matExport=np.zeros([len(specList),6,30])
        errExport=np.zeros([len(specList),6,30])
        for j in range(6):
            mu,sigma=modelList[j]([specList,auxInList])
            matExport[:,j,:]=mu
            errExport[:,j,:]=sigma**0.5
        j=6
        mu,sigma=modelList[j]([specList,auxInList])
        sigma=sigma**0.5
        mu[:,0]=mu[:,0]*YauxNorm[1,0]+YauxNorm[0,0]
        mu[:,1]=mu[:,1]*YauxNorm[1,2]+YauxNorm[0,2]
        sigma[:,0]=sigma[:,0]*YauxNorm[1,0]
        sigma[:,1]=sigma[:,1]*YauxNorm[1,2]
        return matExport,errExport,mu,sigma
    FitFlux=np.load(specOutDir+'/'+snName+'_FitFlux.npy')
    matBig=np.load(predOutDir+'/'+snName+'/matBig.npy')
    errBig=np.load(predOutDir+'/'+snName+'/errBig.npy')
    auxBig=np.load(predOutDir+'/'+snName+'/auxBig.npy')
    aerBig=np.load(predOutDir+'/'+snName+'/aerBig.npy')
    Xinput=np.load(predOutDir+'/'+snName+'/Xinput.npy')
    pivot,slope,chisqList,pivotList,pivotIndexList,slopeList,slopeIndexList=BestSelecter(FitFlux,Xinput,matBig,auxBig,returnList=True)
    
    X_snemo,timeCollect=specListMaker(specDir+'/'+snName+'/',redshift,extHost=ebvHost,extMW=ebvMw)
    
    timeNorm=(timeCollect-YauxNorm[0,1])/YauxNorm[1,1]
    timeNorm=timeNorm.reshape([-1,1])
    dens1Norm=(np.ones([len(X_snemo),1])*pivot-YauxNorm[0,3])/YauxNorm[1,3]
    dens2Norm=(np.ones([len(X_snemo),1])*slope-YauxNorm[0,4])/YauxNorm[1,4]
    auxIn=np.hstack([timeNorm,dens1Norm,dens2Norm])
    matExport,errExport,mu,sigma=ModelPredictor(intermediateModels,X_snemo,auxIn)
    
    np.save(sequenceDir+'/'+snName+'_Elem.npy',10**matExport)
    auxRun=np.vstack([mu[:,0],timeCollect,mu[:,1],pivot*np.ones(len(X_snemo)),slope*np.ones(len(X_snemo))]).T
    np.save(sequenceDir+'/'+snName+'_Aux.npy',auxRun)
    np.save(sequenceDir+'/'+snName+'_ElemErr.npy',errExport)
    np.save(sequenceDir+'/'+snName+'_AuxErr.npy',sigma)
    
    return pivot,slope







